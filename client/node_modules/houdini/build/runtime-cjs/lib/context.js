"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getHoudiniContext = exports.nullHoudiniContext = exports.setVariables = void 0;
// externals
const svelte_1 = require("svelte");
const store_1 = require("svelte/store");
// locals
const adapter_1 = require("../adapter");
const log = __importStar(require("./log"));
const setVariables = (vars) => (0, svelte_1.setContext)('variables', vars);
exports.setVariables = setVariables;
function nullHoudiniContext() {
    return {
        url: () => null,
        session: () => null,
        variables: async () => { },
        stuff: {},
    };
}
exports.nullHoudiniContext = nullHoudiniContext;
function getHoudiniContext() {
    try {
        // hold onto references to the current session and url values
        const sessionStore = (0, adapter_1.getSession)();
        let session = null;
        sessionStore.subscribe((val) => (session = val));
        const pageStore = (0, adapter_1.getPage)();
        let url = (0, store_1.get)(pageStore).url;
        pageStore.subscribe((val) => (url = val.url));
        return {
            url: () => url,
            session: () => session,
            variables: (0, svelte_1.getContext)('variables') || (() => ({})),
            stuff: {},
        };
    }
    catch (e) {
        log.info(`${log.red('⚠️ getHoudiniContext() was not called in the right place ⚠️')}
You should do something like the following. Make sure getHoudiniContext is 
called at the top of your component (outside any event handlers or function definitions).

<script lang="ts">
    const ${log.yellow('context')} = getHoudiniContext();
    const onClick = () => GQL_${log.cyan('[YOUR_STORE]')}.mutate({ ${log.yellow('context')} });
</script>`);
        throw new Error(e);
    }
}
exports.getHoudiniContext = getHoudiniContext;
