"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
//externals
const graphql = __importStar(require("graphql"));
const promises_1 = require("fs/promises");
// internals
const common_1 = require("../../../common");
// the persist output generator is responsible for generating a queryMap.json
// to the provided path with the `hash` as key and the raw query as value.
async function persistOutputGenerator(config, docs) {
    if (typeof config.persistedQueryPath !== 'string' || config.persistedQueryPath.length === 0)
        return;
    if (!config.persistedQueryPath.endsWith('.json')) {
        console.log('Can only write the queryMap to a json file');
        return;
    }
    const queryMap = docs.reduce((acc, { document, generateArtifact }) => {
        // if the document is generated, just return early since there is no operation
        if (!generateArtifact) {
            return acc;
        }
        // Strip all references to internal directives
        let rawString = graphql.print(graphql.visit(document, {
            Directive(node) {
                // if the directive is one of the internal ones, remove it
                if (config.isInternalDirective(node)) {
                    return null;
                }
            },
        }));
        const operations = document.definitions.filter(({ kind }) => kind === graphql.Kind.OPERATION_DEFINITION);
        // if there are operations in the document
        if (operations.length > 0 && operations[0].kind === 'OperationDefinition') {
            acc[(0, common_1.hashDocument)(rawString)] = rawString;
        }
        return acc;
    }, {});
    if (Object.keys(queryMap).length === 0)
        return;
    // Write the queryMap to the provided path
    await (0, promises_1.writeFile)(config.persistedQueryPath, JSON.stringify(queryMap, null, 4), 'utf-8');
}
exports.default = persistOutputGenerator;
