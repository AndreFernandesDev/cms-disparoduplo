"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateIndividualStoreMutation = void 0;
const path_1 = __importDefault(require("path"));
const utils_1 = require("../../utils");
async function generateIndividualStoreMutation(config, doc) {
    const fileName = doc.name;
    const storeName = config.storeName(doc);
    const artifactName = `${doc.name}`;
    // store content
    const storeData = `import { houdiniConfig } from '$houdini'
import artifact from '../artifacts/${artifactName}'
import { mutationStore } from '../runtime/stores'
import { defaultConfigValues } from '../runtime/lib'

export const ${storeName} = mutationStore({
    config: defaultConfigValues(houdiniConfig),
	artifact,
})

export default ${storeName}
`;
    // type definitions
    const typeDefs = `import type { ${artifactName}$input, ${artifactName}$result } from '$houdini'
import type { MutationStore } from '../runtime/lib/types'

export declare const ${storeName}: MutationStore<${artifactName}$result | undefined, ${artifactName}$input>

export default ${storeName}
  `;
    await Promise.all([
        (0, utils_1.writeFile)(path_1.default.join(config.storesDirectory, `${fileName}.js`), storeData),
        (0, utils_1.writeFile)(path_1.default.join(config.storesDirectory, `${fileName}.d.ts`), typeDefs),
    ]);
    return fileName;
}
exports.generateIndividualStoreMutation = generateIndividualStoreMutation;
