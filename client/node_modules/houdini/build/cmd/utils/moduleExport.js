"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.moduleExport = void 0;
// externals
const recast = __importStar(require("recast"));
const AST = recast.types.builders;
function moduleExport(config, key, value) {
    // module exports in sapper should be common js
    if (config.module === 'commonjs') {
        // the thing to assign
        let target = AST.memberExpression(AST.identifier('module'), AST.identifier('exports'));
        if (key !== 'default') {
            target = AST.memberExpression(target, AST.identifier(key));
        }
        return AST.expressionStatement(AST.assignmentExpression('=', target, value));
    }
    return key === 'default'
        ? AST.exportDefaultDeclaration(value)
        : AST.exportNamedDeclaration(AST.variableDeclaration('const', [
            AST.variableDeclarator(AST.identifier(key), value),
        ]));
}
exports.moduleExport = moduleExport;
