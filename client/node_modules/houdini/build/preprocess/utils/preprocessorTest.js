"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
// external imports
const svelte = __importStar(require("svelte/compiler"));
const path_1 = __importDefault(require("path"));
// local imports
const common_1 = require("../../common");
const transforms_1 = __importDefault(require("../transforms"));
async function preprocessorTest(content, { route, ...cfg } = { route: true }) {
    const schema = `
		type User {
			id: ID!
		}

        type Query {
            viewer: User
        }

        type Mutation {
            addUser: User
        }
	`;
    // build up the document we'll pass to the processor
    const config = (0, common_1.testConfig)({ schema, framework: 'sapper', ...cfg });
    const doc = {
        content,
        filename: route
            ? path_1.default.join(config.projectRoot, 'src', 'routes', 'component.svelte')
            : path_1.default.join(config.projectRoot, 'src', 'lib', 'component.svelte'),
    };
    // run the source through the processor
    const result = await (0, transforms_1.default)(config, doc);
    return svelte.parse(result.code);
}
exports.default = preprocessorTest;
